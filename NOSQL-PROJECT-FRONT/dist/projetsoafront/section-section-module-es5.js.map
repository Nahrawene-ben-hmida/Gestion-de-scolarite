{"version":3,"sources":["./src/app/demo/gestion-scolarite/section/section.component.html","./src/app/demo/gestion-scolarite/section/section-routing.module.ts","./src/app/demo/gestion-scolarite/section/section.component.scss","./src/app/demo/gestion-scolarite/section/section.component.ts","./src/app/demo/gestion-scolarite/section/section.module.ts","./src/app/demo/services/matiere.service.ts","./src/app/demo/services/section.service.ts"],"names":[],"mappings":"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","file":"section-section-module-es5.js","sourcesContent":["module.exports = \"<app-snackbar [type]=\\\"type\\\" [message]=\\\"message\\\" [show]=\\\"show\\\"></app-snackbar>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <app-card cardTitle=\\\"Section\\\" [options]=\\\"false\\\">\\n            <div class=\\\"row\\\">\\n                <div >\\n                    <h5 class=\\\"mt-3\\\">Ajouter une Section</h5>\\n                    <form [formGroup]=\\\"section\\\" (ngSubmit)=\\\"onSubmit()\\\"  >\\n                        <div class=\\\"input-group mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">Section</span>\\n                            </div>\\n                            <input formControlName=\\\"section\\\" name=\\\"section\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Produit Designation\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.section.errors }\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Ajouter</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">Matiere</span>\\n                            </div>\\n                            <select formControlName=\\\"idMatieres\\\"  class=\\\"custom-select form-control\\\" id=\\\"inputGroupSelect04\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" multiple [ngClass]=\\\"{'is-invalid': submitted && f.idMatieres.errors }\\\">\\n                                <option selected value=\\\"\\\" >Choose...</option>\\n                                <option *ngFor=\\\"let matiere of matieres\\\" value=\\\"{{matiere.id}}\\\">{{matiere.matiere}}</option>\\n                            </select>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </app-card>\\n    </div>\\n</div>\\n<div>\\n    <mat-form-field>\\n        <mat-label>Filter</mat-label>\\n        <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" #input>\\n    </mat-form-field>\\n\\n    <div class=\\\"mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n            </ng-container>\\n\\n            <!-- Progress Column -->\\n            <ng-container matColumnDef=\\\"Section\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Section </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.section}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Matieres\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Matieres </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.matieres}}\\n                </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Modifier\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Modifier </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button (click)=\\\"modifier(row.id)\\\" class=\\\"btn btn-secondary\\\">Modifier</button>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n            <!-- Row shown when there is no matching data. -->\\n            <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n            </tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SectionComponent} from \"./section.component\";\n\n\nconst routes: Routes = [{\n  path:'',\n  component:SectionComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SectionRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vZ2VzdGlvbi1zY29sYXJpdGUvc2VjdGlvbi9zZWN0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\n\nimport {Matiere} from \"../matiere/matiere.component\";\nimport {SectionService} from \"../../services/section.service\";\nimport {MatiereService} from \"../../services/matiere.service\";\nexport interface Section {\n  id: string,\n  section: string,\n}\n\n\n@Component({\n  selector: 'app-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.scss']\n})\nexport class SectionComponent implements OnInit {\n  sections: any;\n  section: FormGroup;\n  matieres: any;\n  submitted = false;\n  focus;\n  message;\n  show = false;\n  type ;\n  displayedColumns: string[] = ['id', 'Section','Matieres','Modifier'];\n  dataSource: MatTableDataSource<Section>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n      private sectionService: SectionService,\n      private formBuilder: FormBuilder,\n      private matiereService: MatiereService\n  ) { }\n\n  ngOnInit() {\n    this.matiereService.getAllMatieres().subscribe(matieres=>{\n      this.matieres = matieres._embedded.matieres;\n    })\n    this.section = this.formBuilder.group({\n      section: ['',Validators.required],\n      idMatieres: ['',Validators.required]\n    })\n  }\n  ngAfterViewInit(){\n    this.setSections();\n  }\n  setSections(){\n    this.sectionService.getAllSections().subscribe(sections=>{\n      this.sections = sections._embedded.sections;\n      for(let sec of this.sections){\n        this.matiereService.getMatiereBySectionId(sec.id).subscribe(mats=>{\n          let matis: any;\n          matis = mats;\n          let strMatieres = '';\n          for(let mat of matis._embedded.matieres){\n            strMatieres+=mat.matiere + \" \";\n          }\n          sec[\"matieres\"] = strMatieres;\n        })\n\n      }\n      this.dataSource = new MatTableDataSource<Section>(this.sections);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n  get f() {\n    return this.section.controls;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onSubmit() {\n    this.submitted = true;\n    if(this.section.invalid){\n      return;\n    }\n    this.sectionService.ajouteSection(this.section.value).subscribe(section => {\n      this.section.value.idMatieres.forEach(idMatiere=>{\n        this.sectionService.ajouteMatiere(section.id,idMatiere).subscribe(sec=>{\n          this.setSections();\n          this.submitted = false;\n          this.section.reset();\n        })\n      })\n\n    })\n  }\n  modifier(id){this.sectionService.getSectionById(id).subscribe(sec=>{\n      this.sectionService.getMatieres(sec.id).subscribe(mat=>{\n        let matieres:any;\n        matieres = mat;\n        let index=0;\n        if(matieres._embedded.matieres.length == 0){\n          this.section = this.formBuilder.group({\n            section:[sec.section,Validators.required],\n            id:[sec.id,Validators.required],\n            idMatieres:['',Validators.required]\n          })\n        }\n        for(let matiere of matieres._embedded.matieres){\n          this.sectionService.deleteMatiere(sec.id,matiere.id).subscribe(()=>{\n            index++;\n            if(index == matieres._embedded.matieres.length){\n              this.section = this.formBuilder.group({\n                section:[sec.section,Validators.required],\n                id:[sec.id,Validators.required],\n                idMatieres:['',Validators.required]\n              })\n            }\n          })\n        }\n      })\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SectionRoutingModule } from './section-routing.module';\nimport {SectionComponent} from \"./section.component\";\nimport {SharedModule} from \"../../../theme/shared/shared.module\";\nimport {NgbDropdownModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\n\n\n@NgModule({\n  declarations: [SectionComponent],\n  imports: [\n    CommonModule,\n    SectionRoutingModule,\n    SharedModule,\n    NgbDropdownModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n\n  ]\n})\nexport class SectionModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatiereService {\n  url  = environment.proxyServiceEtudiant+\"/matieres\"\n  constructor(\n      protected httpClient: HttpClient\n  ) { }\n  getAllMatieres(): Observable<any> {\n    return this.httpClient.get(this.url);\n  }\n  getMatiereById(matiereId: Number) {\n    return this.httpClient.get<any>(this.url+'/'+matiereId);\n  }\n  ajouteMatiere(matiere):Observable<any> {\n    return this.httpClient.post(this.url,matiere);\n  }\n  deleteMatiere(id) {\n    return this.httpClient.delete(this.url+'/'+id);\n  }\n  newHeader = {\n    headers: new HttpHeaders ({\n      'Content-Type':  'text/uri-list',\n      'Accept':'text/uri-list'\n    })\n  };\n  //\n  // test(){\n  //   return this.httpClient.post(\"http://localhost:8081/sections/1/matiereSection\",\"http://localhost:8081/matieres/4\",this.newHeader)\n  // }\n  ajouteSection(idMatiere,idSection){\n    return this.httpClient.put(this.url+\"/\"+idMatiere+\"/sections\",environment.proxyServiceEtudiant+\"/sections/\"+idSection,this.newHeader);\n  }\n  getMatiereBySectionId(idSection){\n    return this.httpClient.get(this.url+\"/search/findAllBySectionsId?sectionId=\"+idSection);\n  }\n  countAllMatieres(){\n    return this.httpClient.get(this.url+'/search/countAllMatieres')\n  }\n  deleteSectionById(idSection,idMatiere){\n    return this.httpClient.delete(this.url+'/'+idMatiere+'/sections/'+idSection);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n  url = environment.proxyServiceEtudiant+\"/sections\"\n  constructor(\n      protected httpClient: HttpClient\n  ) { }\n  getAllSections(): Observable<any> {\n    return this.httpClient.get(this.url);\n  }\n  getSectionById(sectionId: Number) {\n    return this.httpClient.get<any>(this.url+'/'+sectionId);\n  }\n  ajouteSection(section):Observable<any> {\n    return this.httpClient.post(this.url,section);\n  }\n  deleteSection(id) {\n    return this.httpClient.delete(this.url+'/'+id);\n  }\n  newHeader = {\n    headers: new HttpHeaders ({\n      'Content-Type':  'text/uri-list',\n      'Accept':'text/uri-list'\n    })\n  };\n\n  ajouteMatiere(idSection,idMatiere){\n    return this.httpClient.put(this.url+\"/\"+idSection+\"/matiereSection\",environment.proxyServiceEtudiant+\"/matieres/\"+idMatiere,this.newHeader)\n  }\n  getMatieres(idSection) {\n    return this.httpClient.get(this.url+\"/\"+idSection+\"/matiereSection\");\n  }\n  countAllSections(){\n    return this.httpClient.get(this.url+'/search/countAllSections');\n  }\n  deleteMatiere(idSection,idMatiere){\n    return this.httpClient.delete(this.url+'/'+idSection+'/matiereSection/'+idMatiere);\n  }\n\n}\n"],"sourceRoot":""}