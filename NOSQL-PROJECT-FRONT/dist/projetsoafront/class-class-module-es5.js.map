{"version":3,"sources":["./src/app/demo/gestion-scolarite/class/class.component.html","./src/app/demo/gestion-scolarite/class/class-routing.module.ts","./src/app/demo/gestion-scolarite/class/class.component.scss","./src/app/demo/gestion-scolarite/class/class.component.ts","./src/app/demo/gestion-scolarite/class/class.module.ts","./src/app/demo/services/class.service.ts","./src/app/demo/services/section.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,o7BAAo7B,+CAA+C,2qBAA2qB,+CAA+C,2KAA2K,YAAY,KAAK,iBAAiB,0rBAA0rB,QAAQ,gRAAgR,eAAe,8PAA8P,aAAa,ihBAAihB,2BAA2B,mNAAmN,aAAa,uJ;;;;;;;;;;;;;;;;;;;ACAz1H;AACc;AACN;AAGjD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,+DAAc;KAC1B,CAAC,CAAC;AAMH;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;ACd/B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;ACAJ;AACO;AACP;AACF;AACV;AACW;AACI;AAgB9D;IAcE,wBACY,YAA0B,EAC1B,WAAwB,EACxB,cAA8B;QAF9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAb1C,cAAS,GAAG,KAAK,CAAC;QAGlB,SAAI,GAAG,KAAK,CAAC;QAEb,qBAAgB,GAAa,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAC,UAAU,CAAC,CAAC;IAS/D,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACrD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE9C,CAAC,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC;IACJ,CAAC;IACD,mCAAU,GAAV;QAAA,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,iBAAO;;YACjD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,OAAO,CAAC;YAC9B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;oCACjC,EAAE;gBACR,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAO;oBACnD,IAAI,GAAQ,CAAC;oBACb,GAAG,GAAG,OAAO,CAAC;oBACd,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC9B,CAAC,CAAC;;;gBALJ,KAAc,6DAAI,CAAC,OAAO;oBAAtB,IAAI,EAAE;4BAAF,EAAE;iBAMT;;;;;;;;;YACD,KAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAQ,KAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IACD,sBAAI,6BAAC;aAAL,cAAS,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC;;;OAAA;IACrC,wCAAe,GAAf;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,oCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,iCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC;YACpB,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,WAAC;gBAC5E,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;oBACf,SAAS,EAAC,EAAE;iBACb,CAAC,CAAC;YACL,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACD,iCAAQ,GAAR,UAAS,EAAE;QAAX,iBAaC;QAZC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAChD,IAAI,GAAO,CAAC;gBACZ,GAAG,GAAE,OAAO,CAAC;gBACb,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAClC,SAAS,EAAE,CAAC,GAAG,CAAC,SAAS,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBAC9C,SAAS,EAAE,CAAC,GAAG,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;oBACvC,EAAE,EAAC,CAAC,GAAG,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;iBAChC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;;gBAvEyB,oEAAY;gBACb,0DAAW;gBACR,wEAAc;;IAND;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;wEAAY,wEAAY;qDAAC;IAC7B;QAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;wEAAO,8DAAO;gDAAC;IAZvC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,wKAAqC;;SAEtC,CAAC;+EAgB0B,oEAAY;YACb,0DAAW;YACR,wEAAc;OAjB/B,cAAc,CAwF1B;IAAD,qBAAC;CAAA;AAxF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBc;AACM;AAEa;AACX;AACgB;AACJ;AACG;AACT;AACE;AACF;AACF;AACU;AAkB/D;IAAA;IAA2B,CAAC;IAAf,WAAW;QAfvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,+DAAc,CAAC;YAC9B,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,wEAAY;gBACZ,4EAAiB;gBACjB,+EAAkB;gBAClB,sEAAc;gBACd,wEAAe;gBACf,uEAAc;gBACd,qEAAa;gBACb,+EAAkB;aACnB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AC9BmB;AACkB;AAEC;AAK9D;IAEE,sBACc,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFpC,QAAG,GAAG,qEAAW,CAAC,oBAAoB,GAAE,UAAU,CAAC;QAgBnD,cAAS,GAAG;YACV,OAAO,EAAE,IAAI,gEAAW,CAAE;gBACxB,cAAc,EAAG,eAAe;gBAChC,QAAQ,EAAC,eAAe;aACzB,CAAC;SACH,CAAC;IAlBE,CAAC;IACL,oCAAa,GAAb;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IACD,mCAAY,GAAZ,UAAa,OAAe;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IACD,kCAAW,GAAX,UAAY,GAAG;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IACD,kCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAQD,oCAAa,GAAb,UAAc,OAAO,EAAC,SAAS;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,OAAO,GAAC,eAAe,EAAC,qEAAW,CAAC,oBAAoB,GAAC,YAAY,GAAC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1I,CAAC;IACD,iCAAU,GAAV,UAAW,OAAO;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,OAAO,GAAC,eAAe,CAAC,CAAC;IACnE,CAAC;IACD,sCAAe,GAAf;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,yBAAyB,CAAC;IAChE,CAAC;IACD,8CAAuB,GAAvB,UAAwB,SAAS;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,0CAA0C,GAAC,SAAS,CAAC,CAAC;IAC5F,CAAC;IACD,4CAAqB,GAArB,UAAsB,SAAS;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,yCAAyC,GAAC,SAAS,CAAC,CAAC;IAC3F,CAAC;;gBAnCyB,+DAAU;;IAHzB,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,YAAY,CAuCxB;IAAD,mBAAC;CAAA;AAvCwB;;;;;;;;;;;;;;;;;;;;ACRkB;AACkB;AAEC;AAK9D;IAEE,wBACc,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFpC,QAAG,GAAG,qEAAW,CAAC,oBAAoB,GAAC,WAAW;QAgBlD,cAAS,GAAG;YACV,OAAO,EAAE,IAAI,gEAAW,CAAE;gBACxB,cAAc,EAAG,eAAe;gBAChC,QAAQ,EAAC,eAAe;aACzB,CAAC;SACH,CAAC;IAlBE,CAAC;IACL,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IACD,uCAAc,GAAd,UAAe,SAAiB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IACD,sCAAa,GAAb,UAAc,OAAO;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IACD,sCAAa,GAAb,UAAc,EAAE;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAQD,sCAAa,GAAb,UAAc,SAAS,EAAC,SAAS;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,SAAS,GAAC,iBAAiB,EAAC,qEAAW,CAAC,oBAAoB,GAAC,YAAY,GAAC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC;IAC7I,CAAC;IACD,oCAAW,GAAX,UAAY,SAAS;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,SAAS,GAAC,iBAAiB,CAAC,CAAC;IACvE,CAAC;IACD,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,0BAA0B,CAAC,CAAC;IAClE,CAAC;IACD,sCAAa,GAAb,UAAc,SAAS,EAAC,SAAS;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,SAAS,GAAC,kBAAkB,GAAC,SAAS,CAAC,CAAC;IACrF,CAAC;;gBAhCyB,+DAAU;;IAHzB,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,cAAc,CAqC1B;IAAD,qBAAC;CAAA;AArC0B","file":"class-class-module-es5.js","sourcesContent":["module.exports = \"<app-snackbar [type]=\\\"type\\\" [message]=\\\"message\\\" [show]=\\\"show\\\"></app-snackbar>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <app-card cardTitle=\\\"Class\\\" [options]=\\\"false\\\">\\n            <div class=\\\"row\\\">\\n                <div >\\n                    <h5 class=\\\"mt-3\\\">Ajouter un Class</h5>\\n                    <form [formGroup]=\\\"class\\\" (ngSubmit)=\\\"onSubmit()\\\"  >\\n                        <div class=\\\"input-group mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">Class</span>\\n                            </div>\\n                            <input formControlName=\\\"nom_class\\\" name=\\\"nom_class\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nom Class\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.nom_class.errors }\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Ajouter</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">Section</span>\\n                            </div>\\n                            <select formControlName=\\\"idSection\\\"  class=\\\"custom-select form-control\\\" id=\\\"inputGroupSelect04\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.idSection.errors }\\\">\\n                                <option selected value=\\\"\\\" >Choose...</option>\\n                                <option *ngFor=\\\"let section of sections\\\" value=\\\"{{section.id}}\\\">{{section.section}}</option>\\n                            </select>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </app-card>\\n    </div>\\n</div>\\n<div>\\n    <mat-form-field>\\n        <mat-label>Filter</mat-label>\\n        <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" #input>\\n    </mat-form-field>\\n\\n    <div class=\\\"mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n            </ng-container>\\n\\n            <!-- Progress Column -->\\n            <ng-container matColumnDef=\\\"Class\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom Class </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nom_class}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Section\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Section </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    {{row.section}}\\n                </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Modifier\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Modifier </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button (click)=\\\"modifier(row.id)\\\" class=\\\"btn btn-secondary\\\">Modifier</button>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n            <!-- Row shown when there is no matching data. -->\\n            <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n            </tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ClassComponent} from \"./class.component\";\n\n\nconst routes: Routes = [{\n  path:'',\n  component: ClassComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClassRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vZ2VzdGlvbi1zY29sYXJpdGUvY2xhc3MvY2xhc3MuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {ClassService} from \"../../services/class.service\";\nimport {SectionService} from \"../../services/section.service\";\nexport interface Class {\n  id: string,\n  nom_class:string,\n  section: {\n    id:string,\n    section:string\n  }\n\n}\n\n@Component({\n  selector: 'app-class',\n  templateUrl: './class.component.html',\n  styleUrls: ['./class.component.scss']\n})\nexport class ClassComponent implements OnInit {\n  classes: any;\n  class: FormGroup;\n  sections: any;\n  submitted = false;\n  focus;\n  message;\n  show = false;\n  type ;\n  displayedColumns: string[] = ['id', 'Class', 'Section','Modifier'];\n  dataSource: MatTableDataSource<Class>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n      private classService: ClassService,\n      private formBuilder: FormBuilder,\n      private sectionService: SectionService\n  ) { }\n\n  ngOnInit() {\n    this.sectionService.getAllSections().subscribe(sections =>{\n      this.sections = sections._embedded.sections;\n\n    })\n    this.class = this.formBuilder.group({\n      nom_class: ['',Validators.required],\n      idSection: ['',Validators.required]\n    })\n  }\n  setClasses(){\n    this.classService.getAllClasses().subscribe(classes=>{\n      console.log(\"classes\",classes)\n      this.classes = classes._embedded.classes;\n      for(let cl of this.classes){\n        this.classService.getSection(cl.id).subscribe(section=>{\n          let sec: any;\n          sec = section;\n          cl[\"section\"] = sec.section;\n        })\n      }\n      this.dataSource = new MatTableDataSource<Class>(this.classes);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n  get f() {return this.class.controls;}\n  ngAfterViewInit(){\n    this.setClasses();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onSubmit() {\n    this.submitted = true;\n    if(this.class.invalid){\n      return;\n    }\n    console.log(this.class.value);\n    this.classService.ajouteClass( this.class.value).subscribe(cla => {\n      this.classService.ajouteSection(cla.id,this.class.value.idSection).subscribe(c=>{\n        this.setClasses();\n        this.submitted = false;\n        this.class.reset({\n          idSection:\"\"\n        });\n      })\n    })\n  }\n  modifier(id){\n    console.log(id);\n    this.classService.getClassById(id).subscribe(cla=>{\n      this.classService.getSection(id).subscribe(section=>{\n        let sec:any;\n        sec= section;\n        this.class = this.formBuilder.group({\n          nom_class: [cla.nom_class,Validators.required],\n          idSection: [sec.id,Validators.required],\n          id:[cla.id,Validators.required]\n        })\n      })\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClassRoutingModule } from './class-routing.module';\nimport {ClassComponent} from \"./class.component\";\nimport {SharedModule} from \"../../../theme/shared/shared.module\";\nimport {NgbDropdownModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\n\n\n@NgModule({\n  declarations: [ClassComponent],\n  imports: [\n    CommonModule,\n    ClassRoutingModule,\n    SharedModule,\n    NgbDropdownModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n  ]\n})\nexport class ClassModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassService {\n  url = environment.proxyServiceEtudiant+ \"/classes\";\n  constructor(\n      protected httpClient: HttpClient\n  ) { }\n  getAllClasses(): Observable<any> {\n    return this.httpClient.get(this.url);\n  }\n  getClassById(classId: Number) {\n    return this.httpClient.get<any>(this.url+'/'+classId);\n  }\n  ajouteClass(cla):Observable<any> {\n    return this.httpClient.post(this.url,cla);\n  }\n  deleteClass(id) {\n    return this.httpClient.delete(this.url+'/'+id);\n  }\n  newHeader = {\n    headers: new HttpHeaders ({\n      'Content-Type':  'text/uri-list',\n      'Accept':'text/uri-list'\n    })\n  };\n\n  ajouteSection(idClass,idSection){\n    return this.httpClient.put(this.url+\"/\"+idClass+\"/sectionClass\",environment.proxyServiceEtudiant+\"/sections/\"+idSection,this.newHeader);\n  }\n  getSection(idClass){\n    return this.httpClient.get(this.url+\"/\"+idClass+\"/sectionClass\");\n  }\n  countAllClasses(){\n    return this.httpClient.get(this.url+'/search/countAllClasses')\n  }\n  countClassesBySessionId(sessionId){\n    return this.httpClient.get(this.url+'/search/countClassesBySession?idSession='+sessionId);\n  }\n  getClassesBySessionId(sessionId){\n    return this.httpClient.get(this.url+'/search/findClassesBySession?idSession='+sessionId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n  url = environment.proxyServiceEtudiant+\"/sections\"\n  constructor(\n      protected httpClient: HttpClient\n  ) { }\n  getAllSections(): Observable<any> {\n    return this.httpClient.get(this.url);\n  }\n  getSectionById(sectionId: Number) {\n    return this.httpClient.get<any>(this.url+'/'+sectionId);\n  }\n  ajouteSection(section):Observable<any> {\n    return this.httpClient.post(this.url,section);\n  }\n  deleteSection(id) {\n    return this.httpClient.delete(this.url+'/'+id);\n  }\n  newHeader = {\n    headers: new HttpHeaders ({\n      'Content-Type':  'text/uri-list',\n      'Accept':'text/uri-list'\n    })\n  };\n\n  ajouteMatiere(idSection,idMatiere){\n    return this.httpClient.put(this.url+\"/\"+idSection+\"/matiereSection\",environment.proxyServiceEtudiant+\"/matieres/\"+idMatiere,this.newHeader)\n  }\n  getMatieres(idSection) {\n    return this.httpClient.get(this.url+\"/\"+idSection+\"/matiereSection\");\n  }\n  countAllSections(){\n    return this.httpClient.get(this.url+'/search/countAllSections');\n  }\n  deleteMatiere(idSection,idMatiere){\n    return this.httpClient.delete(this.url+'/'+idSection+'/matiereSection/'+idMatiere);\n  }\n\n}\n"],"sourceRoot":""}