{"version":3,"sources":["./src/app/demo/cadres-admin/cadres-admin.component.html","./src/app/demo/cadres-admin/cadres-admin-routing.module.ts","./src/app/demo/cadres-admin/cadres-admin.component.scss","./src/app/demo/cadres-admin/cadres-admin.component.ts","./src/app/demo/cadres-admin/cadres-admin.module.ts"],"names":[],"mappings":"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","file":"demo-cadres-admin-cadres-admin-module-es5.js","sourcesContent":["module.exports = \"<!--\\n<app-snackbar [type]=\\\"type\\\" [message]=\\\"message\\\" [show]=\\\"show\\\"></app-snackbar>\\n-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <app-card cardTitle=\\\"Cadres Administratif\\\" [options]=\\\"false\\\">\\n            <div class=\\\"row\\\">\\n                <div >\\n                    <h5 class=\\\"mt-3\\\">Ajouter  Cadre Administratif</h5>\\n                    <form [formGroup]=\\\"cadresAdmin\\\" (ngSubmit)=\\\"onSubmit()\\\"  >\\n                        <div class=\\\"input-group mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">Cadres Administratif</span>\\n                            </div>\\n                            <input formControlName=\\\"nom\\\" name=\\\"nom\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nom\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.nom.errors }\\\">\\n                            <input formControlName=\\\"prenom\\\" name=\\\"prenom\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Prenom\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.prenom.errors }\\\">\\n                            <input formControlName=\\\"adresse\\\" name=\\\"adresse\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Adresse\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.adresse.errors }\\\">\\n                            <input formControlName=\\\"telephone\\\" name=\\\"telephone\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Telephone\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" required=\\\"required\\\" [ngClass]=\\\"{'is-invalid': submitted && f.telephone.errors }\\\">\\n\\n                            <div class=\\\"input-group-append\\\">\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Ajouter</button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </app-card>\\n    </div>\\n</div>\\n<div>\\n    <mat-form-field>\\n        <mat-label>Filter</mat-label>\\n        <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" #input>\\n    </mat-form-field>\\n\\n    <div class=\\\"mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n            </ng-container>\\n\\n            <!-- Progress Column -->\\n            <ng-container matColumnDef=\\\"Nom\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nom}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Prenom\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Prenom </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prenom}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Adresse\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adresse </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.adresse}}</td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Telephone\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Telephone </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.telephone}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Supprimer\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Supprimer  </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button (click)=\\\"supprimer(row.id)\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\n                </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Modifier\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Modifier  </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button (click)=\\\"modifier(row.id)\\\" class=\\\"btn btn-secondary\\\">Modifier</button>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n            <!-- Row shown when there is no matching data. -->\\n            <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n            </tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CadresAdminComponent} from \"./cadres-admin.component\";\n\n\nconst routes: Routes = [{\n  path:'',\n  component:CadresAdminComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CadresAdminRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vY2FkcmVzLWFkbWluL2NhZHJlcy1hZG1pbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {Etudiant} from \"../etudiant/etudiant.component\";\nimport {CadresAdminService} from \"../services/cadres-admin.service\";\nexport interface CadresAdmin{\n  id: string,\n  nom: string,\n  prenom: string,\n  adresse: string,\n  telephone: number\n}\n\n@Component({\n  selector: 'app-cadres-admin',\n  templateUrl: './cadres-admin.component.html',\n  styleUrls: ['./cadres-admin.component.scss']\n})\nexport class CadresAdminComponent implements OnInit {\n  cadresAdmins: any;\n  cadresAdmin: FormGroup;\n  submitted = false;\n  focus;\n  message;\n  show = false;\n  type ;\n  displayedColumns: string[] = ['id', 'Nom', 'Prenom','Adresse','Telephone','Supprimer','Modifier'];\n  dataSource: MatTableDataSource<CadresAdmin>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n      private cadresAdminService: CadresAdminService,\n      private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.cadresAdmin = this.formBuilder.group({\n      nom:['',Validators.required],\n      prenom: ['',Validators.required],\n      adresse: ['',Validators.required],\n      telephone: ['',Validators.required]\n    })\n  }\n  setCadresAdmin() {\n    this.cadresAdminService.getAllCadreAdmins().subscribe(cadresAdmins =>{\n      this.cadresAdmins = cadresAdmins._embedded.cadreAdmins;\n      this.dataSource = new MatTableDataSource<Etudiant>(this.cadresAdmins);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n  get f() { return this.cadresAdmin.controls;}\n  ngAfterViewInit() {\n    this.setCadresAdmin();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onSubmit() {\n    this.submitted = true;\n    if(this.cadresAdmin.invalid){\n      return;\n    }\n    this.cadresAdminService.ajouteCadreAdmin(this.cadresAdmin.value)\n        .subscribe(etudiant =>{\n      this.setCadresAdmin();\n      this.submitted = false;\n      this.cadresAdmin.reset();\n    })\n\n\n  }\n  supprimer(id){\n    console.log(id);\n    this.cadresAdminService.deleteCadreAdmin(id).subscribe(()=>{\n            this.message = \"Suppression réussie\";\n            this.type = \"success\";\n            this.show = true;\n            this.setCadresAdmin();\n    })\n  }\n  modifier(id){\n    this.cadresAdminService.getCadreAdminById(id).subscribe(cadresAdmin=>{\n      this.cadresAdmin = this.formBuilder.group({\n        nom:[cadresAdmin.nom,Validators.required],\n        prenom: [cadresAdmin.prenom,Validators.required],\n        adresse: [cadresAdmin.adresse,Validators.required],\n        telephone: [cadresAdmin.telephone,Validators.required],\n        id:[cadresAdmin.id,Validators.required]\n      })\n    })\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CadresAdminRoutingModule } from './cadres-admin-routing.module';\nimport {CadresAdminComponent} from \"./cadres-admin.component\";\nimport {SharedModule} from \"../../theme/shared/shared.module\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\n\n\n@NgModule({\n  declarations: [CadresAdminComponent],\n  imports: [\n    CommonModule,\n    CadresAdminRoutingModule,\n    SharedModule,\n    MatInputModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ]\n})\nexport class CadresAdminModule { }\n"],"sourceRoot":""}